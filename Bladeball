game.StarterGui:SetCore("SendNotification", {
    Title = "Solitude Hub",
    Text = "Success Loading",
    Icon = "rbxthumb://type=Asset&id=103635972484891&w=420&h=420",
    Duration = 5,
    Callback = function()
    end
})
repeat task.wait() until game:IsLoaded()

getgenv().Image = "rbxthumb://type=Asset&id=103635972484891&w=420&h=420"
getgenv().ToggleUI = "LeftControl"

task.spawn(function()
    if not getgenv().LoadedMobileUI then
        getgenv().LoadedMobileUI = true
        local OpenUI = Instance.new("ScreenGui")
        local ImageButton = Instance.new("ImageButton")
        local UICorner = Instance.new("UICorner")
        OpenUI.Name = "OpenUI"
        OpenUI.Parent = game:GetService("CoreGui")
        OpenUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        ImageButton.Parent = OpenUI
        ImageButton.BackgroundColor3 = Color3.fromRGB(105, 105, 105)
        ImageButton.BackgroundTransparency = 0.8
        ImageButton.Position = UDim2.new(0, 5, 0, 5)
        ImageButton.Size = UDim2.new(0, 58, 0, 58)
        ImageButton.Image = getgenv().Image
        ImageButton.Draggable = false
        ImageButton.Transparency = 1
        UICorner.CornerRadius = UDim.new(100)
        UICorner.Parent = ImageButton
        ImageButton.MouseButton1Click:Connect(function()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, getgenv().ToggleUI, false, game)
        end)
    end
end)

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Solitude Hub [ Premium ]",
    SubTitle = "By Ziugpro",
    TabWidth = 130,
    Size = UDim2.fromOffset(505, 355),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Tab General", Icon = "" }),
    
}
local TogglePro = Tabs.Main:AddToggle("TogglePro", {Title = "Auto Spam", Default = false})
TogglePro:OnChanged(function(Value)
    _G.TogglePro = Value
end)

spawn(function()
    while task.wait(1) do
        if _G.TogglePro then
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 0)
            task.wait()
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 0)
        end
    end
end)
local ToggleProAim = Tabs.Main:AddToggle("ToggleProAim", {Title = "Aimbot Ball", Default = false})
ToggleProAim:OnChanged(function(Value)
    _G.ToggleProAim = Value
end)

spawn(function()
    while task.wait(0.1) do
        if _G.ToggleProAim then
            local players = game:GetService("Players")
            local localPlayer = players.LocalPlayer
            local camera = game:GetService("Workspace").CurrentCamera

            for _, obj in pairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and string.lower(obj.Name):find("ball") then
                    camera.CFrame = CFrame.new(camera.CFrame.Position, obj.Position)
                    break
                end
            end
        end
    end
end)
local ToggleCurbs = Tabs.Main:AddToggle("ToggleCurbs", {
    Title = "Auto Curbs",
    Default = false
})

ToggleCurbs:OnChanged(function(Value)
    _G.CurbsEnabled = Value
end)

spawn(function()
    while task.wait() do
        if _G.CurbsEnabled then
            for _, ball in pairs(workspace:GetDescendants()) do
                if ball:IsA("BasePart") and ball.Name:lower():find("ball") then
                    ball.Velocity = ball.Velocity + Vector3.new(
                        math.random(-20, 20),
                        math.random(-5, 5),
                        math.random(-20, 20)
                    )
                end
            end
        end
    end
end)
local ToggleAutoParry = Tabs.Main:AddToggle("ToggleAutoParry", {Title = "Auto Parry", Default = false})
ToggleAutoParry:OnChanged(function(Value)
    _G.ToggleAutoParry = Value
end)

spawn(function()
    while task.wait(0.1) do
        if _G.ToggleAutoParry then
            local player = game.Players.LocalPlayer
            local character = player.Character
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                local ball = game.Workspace:FindFirstChild("Ball")
                if ball and (ball.Position - character.HumanoidRootPart.Position).Magnitude < 10 then
                end
            end
        end
    end
end)
local Players = game:GetService("Players")

local playerNames = {}
for _, player in pairs(Players:GetPlayers()) do
	table.insert(playerNames, player.Name)
end

local DropdownPlayer = Tabs.Main:AddDropdown("DropdownPlayer", {
	Title = "Select Player",
	Values = playerNames,
	Multi = false,
	Default = 1,
})

Tabs.Main:AddButton({
	Title = "Freeze Player",
	Description = "",
	Callback = function()
		local selected = Dropdown.Value
		local player = Players:FindFirstChild(selected)
		if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.Anchored = true
		end
	end
})
local Players = game:GetService("Players")

local selectedPlayerName = ""

local Input = Tabs.Main:AddInput("Input", {
	Title = "Name Player:",
	Default = "",
	Numeric = false,
	Finished = false,
	Placeholder = "",
	Callback = function(Value)
		selectedPlayerName = Value
	end
})

Tabs.Main:AddButton({
	Title = "Freeze Player",
	Description = "",
	Callback = function()
		local selected = selectedPlayerName
		local player = Players:FindFirstChild(selected)
		if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
			player.Character.HumanoidRootPart.Anchored = true
		end
	end
})
local Players = game:GetService("Players")

Tabs.Main:AddButton({
	Title = "Freeze All Players Except Me",
	Description = "",
	Callback = function()
		local myPlayer = Players.LocalPlayer
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= myPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				player.Character.HumanoidRootPart.Anchored = true
			end
		end
	end
})
local Players = game:GetService("Players")

local playerNames = {}
for _, player in pairs(Players:GetPlayers()) do
	table.insert(playerNames, player.Name)
end

local selectedPlayerName = ""
local kickReason = ""

local DropdownKick = Tabs.Main:AddDropdown("DropdownKick", {
	Title = "Select Player:",
	Values = playerNames,
	Multi = false,
	Default = 1,
	Callback = function(Value)
		selectedPlayerName = Value
	end
})

local ReasonInput = Tabs.Main:AddInput("Reason Input", {
	Title = "Kick Reason:",
	Default = "",
	Numeric = false,
	Finished = false,
	Placeholder = "Enter reason for kick",
	Callback = function(Value)
		kickReason = Value
	end
})

Tabs.Main:AddButton({
	Title = "Kick Player",
	Description = "",
	Callback = function()
		local selected = selectedPlayerName
		local player = Players:FindFirstChild(selected)
		if player then
			player:Kick(kickReason)
		end
	end
})
local Players = game:GetService("Players")

local playerNames = {}
for _, player in pairs(Players:GetPlayers()) do
	table.insert(playerNames, player.Name)
end

local selectedPlayerName = ""

local DropKill = Tabs.Main:AddDropdown("DropKill", {
	Title = "Select Player to Kill:",
	Values = playerNames,
	Multi = false,
	Default = 1,
	Callback = function(Value)
		selectedPlayerName = Value
	end
})

Tabs.Main:AddButton({
	Title = "Kill Player",
	Description = "",
	Callback = function()
		local selected = selectedPlayerName
		local player = Players:FindFirstChild(selected)
		if player and player.Character and player.Character:FindFirstChild("Humanoid") then
			player.Character.Humanoid.Health = 0
		end
	end
})
